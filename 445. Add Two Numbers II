# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        head=l1
        num1=""
        num2=""
        while l1:
            num1=num1+f"{l1.val}"
            l1=l1.next
        while l2:
            num2=num2+f"{l2.val}"
            l2=l2.next
        k=int(num1)+int(num2)

        res=ListNode(k%10)
        k=k//10
        print(k)
        while k>0:
            temp=ListNode(k%10)
            k=k//10
            temp.next=res
            res=temp
        return res

        
